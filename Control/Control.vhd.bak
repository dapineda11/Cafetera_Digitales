--******************************************************--
						--Bloque control
--******************************************************--
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

--******************************************************--
-- Autor: -david castellanos
			 --Julian Oviedo
			--Daniel Pineda
--    --
--******************************************************--

entity Control is
port(
Reloj     : in std_logic;
Reset     : in std_logic;
Tipo_Expreso_Control  : in std_logic; 
Expreso_Disponible_Control : in std_logic;
Cantidad_Agua_Control : in std_logic;
Cantidad_Cafe_Control : in std_logic;
Contador_Agua_Control : in std_logic;
Contador_Cafe_Control : in std_logic;
Expreso_Listo_Control : in std_logic;
Llenado_Cafe : in std_logic;
Llenado_Agua : in std_logic;
Confirmar : in std_logic;
Boton_Vaso : in std_logic;
Usuario : in std_logic_vector(1 downto 0); 

Conteo_E1_Control      : in std_logic;
Conteo_E2_Control      : in std_logic;
Conteo_E3_Control      : in std_logic;
Conteo_E4_Control      : in std_logic;
Conteo_1_Control      : in std_logic;
Conteo_2_Control      : in std_logic;
Conteo_3_Control      : in std_logic;
Conteo_4_Control      : in std_logic;

Control_Conteo_E1      : out std_logic;
Control_Conteo_E2      : out std_logic;
Control_Conteo_E3      : out std_logic;
Control_Conteo_E4      : out std_logic;
Control_Conteo_1      : out std_logic;
Control_Conteo_2      : out std_logic;
Control_Conteo_3      : out std_logic;
Control_Conteo_4      : out std_logic;

Control_Cantidad_Cafe  : out std_logic ; 
Control_Cantidad_Agua : out std_logic;
Control_Contador_Agua : out std_logic;
Control_Contador_Cafe : out std_logic;

Decodificador_7_segmentos : out std_logic_vector(6 downto 0);
Valvula_Agua : out std_logic_vector(5 downto 0);
Valvula_Cafe : out std_logic_vector(3 downto 0);
Led_Expreso_Listo : out std_logic;
Led_Llenar_Almacenamiento : out std_logic;
ver_Estados : out std_logic_vector(13 downto 0)

); 
end entity Control;     

architecture ControlArch of Control is
	
component dffe is
	port(d, clk, clrn, prn, ena: in std_logic;
		q: out std_logic
			);
			end component ;
			
			
signal Q : std_logic_vector (13 downto 0);
signal D : std_logic_vector (13 downto 0);
signal E : std_logic;

begin
 

	  D(0)<=(((not Q(0) and (Confirmar)) or (llenado_Cafe and llenado_Agua)));
	  D(1)<= (not Confirmar and (Q(0) or Q(1)));	
     D(2)<= ((Q(1) or Q(2)) and Confirmar);
	  D(3) <= ( (Q(2) or Q(3)) and Boton_Vaso);
	  D(4) <= ((Q(3) or Q(4))and not Boton_Vaso);
	  D(5) <= (Boton_Vaso or Q(4));
	  D(6) <= ((Q(5) or Q(6))and((not Expreso_Disponible_Control)or(llenado_Agua and llenado_Cafe)or(llenado_Agua and not llenado_Cafe)or (not llenado_Agua and llenado_Cafe)));
	  D(7) <= ((Q(6) or Q(7))and(Q(2) or Q(3)) and(not llenado_Agua and not llenado_Cafe));
	  D(8) <= ((Q(7) or Q(8))and(Q(2) or Q(3))and(not Usuario(0) and not Usuario(1)));--expreso simple
	  D(9) <= ((Q(8) or Q(9))and( Usuario(0) and not Usuario(1)));--expreso doble
	  D(10) <= ((Q(9) or Q(10))and( not Usuario(0) and Usuario(1)));--expreso corto
	  D(11) <= ((Q(10) or Q(11))and ( Usuario(0) and Usuario(1)));--expreso largo
	  D(12) <= ((Q(11) or Q(12))and((Expreso_Listo_Control)or (Confirmar) or (Conteo_1_Control)));
	  D(13) <= ((Q(12) or Q(13))and(not Confirmar));
	  
	  

FF1: dffe port map 	(D(0), Reloj, Reset, '0' ,E , Q(0));
FF2: dffe port map 	(D(1), Reloj, Reset, '1', E ,Q(1));
FF3: dffe port map 	(D(2), Reloj, Reset, '1', E ,Q(2));
FF4: dffe port map 	(D(3), Reloj, Reset, '1', E ,Q(3));
FF5: dffe port map 	(D(4), Reloj, Reset, '1', E ,Q(4));
FF6: dffe port map 	(D(5), Reloj, Reset, '1', E ,Q(5));
FF7: dffe port map 	(D(6), Reloj, Reset, '1', E ,Q(6));
FF8: dffe port map 	(D(7), Reloj, Reset, '1', E ,Q(7));
FF9: dffe port map   (D(8), Reloj, Reset, '1', E ,Q(8));
FF10: dffe port map  (D(9), Reloj, Reset, '1', E ,Q(9));
FF11: dffe port map  (D(10), Reloj, Reset, '1', E ,Q(10));
FF12: dffe port map  (D(11), Reloj, Reset, '1', E ,Q(11));
FF13: dffe port map  (D(12), Reloj, Reset, '1', E ,Q(12));
FF14: dffe port map  (D(13), Reloj, Reset, '1', E ,Q(13));


Ver_Estados <= Q;--toma el valor de los estados


End ControlArch;
